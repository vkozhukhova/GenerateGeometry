## -*- encoding: utf-8 -*-

# This file was *autogenerated* from the file geom_pk1.sagetex.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_6 = Integer(6); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_9 = Integer(9); _sage_const_8 = Integer(8); _sage_const_28 = Integer(28); _sage_const_29 = Integer(29); _sage_const_22 = Integer(22); _sage_const_23 = Integer(23); _sage_const_20 = Integer(20); _sage_const_21 = Integer(21); _sage_const_26 = Integer(26); _sage_const_27 = Integer(27); _sage_const_24 = Integer(24); _sage_const_25 = Integer(25); _sage_const_135 = Integer(135); _sage_const_45 = Integer(45); _sage_const_60 = Integer(60); _sage_const_172 = Integer(172); _sage_const_150 = Integer(150); _sage_const_184 = Integer(184); _sage_const_180 = Integer(180); _sage_const_120 = Integer(120); _sage_const_13 = Integer(13); _sage_const_12 = Integer(12); _sage_const_11 = Integer(11); _sage_const_10 = Integer(10); _sage_const_17 = Integer(17); _sage_const_16 = Integer(16); _sage_const_15 = Integer(15); _sage_const_14 = Integer(14); _sage_const_31 = Integer(31); _sage_const_30 = Integer(30); _sage_const_19 = Integer(19); _sage_const_18 = Integer(18); _sage_const_77 = Integer(77); _sage_const_90 = Integer(90)## This file (geom_pk1.sagetex.sage) was *autogenerated* from geom_pk1.tex with sagetex.sty version 2015/08/26 v3.0-92d9f7a.
import sagetex
_st_ = sagetex.SageTeXProcessor('geom_pk1', version='2015/08/26 v3.0-92d9f7a', version_check=True)
_st_.current_tex_line = _sage_const_77 
_st_.blockbegin()
try:
 # Разложение вектора по векторам
 p11=zero_vector(_sage_const_3 )
 q11=p11
 r11=p11
 mpqr11 = matrix([p11, q11, r11])
 while p11==zero_vector(_sage_const_3 ) or q11==zero_vector(_sage_const_3 ) or r11==zero_vector(_sage_const_3 ) or det(mpqr11)==_sage_const_0 :
     p11 = vector([randint(-_sage_const_7 , _sage_const_7 ) for i in range(_sage_const_3 )])
     q11 = vector([randint(-_sage_const_3 , _sage_const_3 ) for i in range(_sage_const_3 )])
     r11 = vector([randint(-_sage_const_10 , _sage_const_10 ) for i in range(_sage_const_3 )])
     mpqr11 = matrix([p11, q11, r11])
 coord11 = vector([_sage_const_0 ,_sage_const_0 ,_sage_const_0 ])
 while coord11 == vector([_sage_const_0 ,_sage_const_0 ,_sage_const_0 ]) :
     coord11 = vector([randint(-_sage_const_4 , _sage_const_4 ) for i in range(_sage_const_3 )])
 x11 = coord11[_sage_const_0 ]*p11 + coord11[_sage_const_1 ]*q11 + coord11[_sage_const_2 ]*r11
 # Найти периметр и площадь треугольника на векторах a и b
 var('u,v,m,n')
 u12=zero_vector(_sage_const_3 )
 v12=u12
 while u12==zero_vector(_sage_const_3 ) or v12==zero_vector(_sage_const_3 ) or u12.cross_product(v12)==zero_vector(_sage_const_3 ):
  u12 = vector([randint(-_sage_const_3 , _sage_const_4 ) for i in range(_sage_const_3 )])
  v12 = vector([randint(-_sage_const_4 , _sage_const_3 ) for i in range(_sage_const_3 )])
 basisuv12 = vector([u,v])
 acoord12=zero_vector(_sage_const_2 )
 bcoord12=zero_vector(_sage_const_2 )
 mab12 = matrix([acoord12, bcoord12])
 while acoord12[_sage_const_0 ]==_sage_const_0  or acoord12[_sage_const_1 ]==_sage_const_0  or bcoord12[_sage_const_0 ]==_sage_const_0  or bcoord12[_sage_const_1 ]==_sage_const_0  or det(mab12)==_sage_const_0 :
  acoord12 = vector([randint(-_sage_const_3 , _sage_const_4 ) for i in range(_sage_const_2 )])
  bcoord12 = vector([randint(-_sage_const_4 , _sage_const_3 ) for i in range(_sage_const_2 )])
  mab12 = matrix([acoord12, bcoord12])
 a12print=basisuv12.dot_product(acoord12)
 b12print=basisuv12.dot_product(bcoord12)
 a12=acoord12[_sage_const_0 ]*u12+acoord12[_sage_const_1 ]*v12
 b12=bcoord12[_sage_const_0 ]*u12+bcoord12[_sage_const_1 ]*v12
 S12=(a12.cross_product(b12)).norm()/_sage_const_2 
 P12=a12.norm()+b12.norm()+(b12-a12).norm()
 # угол между диагоналями треугольника
 normm13=randint(_sage_const_1 ,_sage_const_4 )
 normn13=randint(_sage_const_1 ,_sage_const_3 )
 Set13 = FiniteEnumeratedSet([_sage_const_30 ,_sage_const_45 ,_sage_const_60 ,_sage_const_90 ,_sage_const_135 ,_sage_const_120 ,_sage_const_150 ]) # углы в градусах
 ang13 = Set13.random_element() # случайный угол
 basismn13 = vector([m,n])
 acoord13=zero_vector(_sage_const_2 )
 bcoord13=zero_vector(_sage_const_2 )
 mab13 = matrix([acoord13, bcoord13])
 while acoord13==zero_vector(_sage_const_2 ) or bcoord13==zero_vector(_sage_const_2 ) or det(mab13)==_sage_const_0 :
     acoord13 = vector([randint(-_sage_const_3 , _sage_const_4 ) for i in range(_sage_const_2 )])
     bcoord13 = vector([randint(-_sage_const_4 , _sage_const_3 ) for i in range(_sage_const_2 )])
     mab13 = matrix([acoord13, bcoord13])
 a13print=basismn13.dot_product(acoord13)
 b13print=basismn13.dot_product(bcoord13)
 d1coord13=acoord13+bcoord13
 d2coord13=acoord13-bcoord13
 d1d2dot13=d1coord13[_sage_const_0 ]*d2coord13[_sage_const_0 ]*normm13**_sage_const_2 +(d1coord13[_sage_const_0 ]*d2coord13[_sage_const_1 ]+d1coord13[_sage_const_1 ]*d2coord13[_sage_const_0 ])*normm13*normn13*cos(ang13*pi/_sage_const_180 )+d1coord13[_sage_const_1 ]*d2coord13[_sage_const_1 ]*normn13**_sage_const_2 
 d1norm13=sqrt(d1coord13[_sage_const_0 ]**_sage_const_2 *normm13**_sage_const_2 +d1coord13[_sage_const_1 ]**_sage_const_2 *normn13**_sage_const_2 +_sage_const_2 *d1coord13[_sage_const_0 ]*d1coord13[_sage_const_1 ]*normm13*normn13*cos(ang13*pi/_sage_const_180 ))
 d2norm13=sqrt(d2coord13[_sage_const_0 ]**_sage_const_2 *normm13**_sage_const_2 +d2coord13[_sage_const_1 ]**_sage_const_2 *normn13**_sage_const_2 +_sage_const_2 *d2coord13[_sage_const_0 ]*d2coord13[_sage_const_1 ]*normm13*normn13*cos(ang13*pi/_sage_const_180 ))
 d1d2ang13=d1d2dot13/(d1norm13*d2norm13)
 # длина вектора и направляющие косинусы
 A14=zero_vector(_sage_const_3 )
 B14=A14
 C14=A14
 mABC14 = matrix([A14, B14, C14])
 while A14==zero_vector(_sage_const_3 ) or B14==zero_vector(_sage_const_3 ) or C14==zero_vector(_sage_const_3 ) or det(mABC14)==_sage_const_0 :
     A14 = vector([randint(-_sage_const_7 , _sage_const_7 ) for i in range(_sage_const_3 )])
     B14 = vector([randint(-_sage_const_3 , _sage_const_3 ) for i in range(_sage_const_3 )])
     C14 = vector([randint(-_sage_const_5 , _sage_const_5 ) for i in range(_sage_const_3 )])
     mABC14 = matrix([A14, B14, C14])
 AC14=C14-A14
 AB14=B14-A14
 BC14=C14-B14
 Set14 = {'AB':AB14,'BC':BC14,'AC':AC14, 'BA':-AB14,'CB':-BC14,'CA':-AC14}
 import random
 vec114=random.choice(Set14.keys())
 vec214=vec114
 while vec214==vec114 or Set14[vec114].cross_product(Set14[vec214])==zero_vector(_sage_const_3 ):
     vec214=random.choice(Set14.keys())
 c14=randint(_sage_const_2 ,_sage_const_3 )
 p14=c14*(Set14[vec114].cross_product(Set14[vec214]))
 p14norm=p14.norm()
 p14cos=p14/p14.norm()
 # Проверка компланарности векторов
 ch15 = randint(_sage_const_1 ,_sage_const_2 ) #1 - ЛЗ, #2 ЛНЗ
 if ch15==_sage_const_1  :
     a15 = vector([randint(-_sage_const_7 , _sage_const_7 ) for i in range(_sage_const_3 )])
     b15 = vector([randint(-_sage_const_3 , _sage_const_3 ) for i in range(_sage_const_3 )])
     c15 = randint(-_sage_const_5 ,_sage_const_5 )*a15 + randint(-_sage_const_5 ,_sage_const_5 )*b15
 else :
     a15 = vector([randint(-_sage_const_7 , _sage_const_7 ) for i in range(_sage_const_3 )])
     b15 = vector([randint(-_sage_const_3 , _sage_const_3 ) for i in range(_sage_const_3 )])
     c15 = vector([randint(-_sage_const_5 , _sage_const_5 ) for i in range(_sage_const_3 )])
 abc15 = c15.dot_product(a15.cross_product(b15))
 if abc15 == _sage_const_0  :
     compl15 = r"компланарны"
 else :
     compl15 = r"не компланарны"
except:
 _st_.goboom(_sage_const_172 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_4 
 _st_.inline(_sage_const_0 , latex(x11))
except:
 _st_.goboom(_sage_const_4 )
try:
 _st_.current_tex_line = _sage_const_4 
 _st_.inline(_sage_const_1 , latex(p11))
except:
 _st_.goboom(_sage_const_4 )
try:
 _st_.current_tex_line = _sage_const_4 
 _st_.inline(_sage_const_2 , latex(q11))
except:
 _st_.goboom(_sage_const_4 )
try:
 _st_.current_tex_line = _sage_const_4 
 _st_.inline(_sage_const_3 , latex(r11))
except:
 _st_.goboom(_sage_const_4 )
try:
 _st_.current_tex_line = _sage_const_10 
 _st_.inline(_sage_const_4 , latex(a12print))
except:
 _st_.goboom(_sage_const_10 )
try:
 _st_.current_tex_line = _sage_const_10 
 _st_.inline(_sage_const_5 , latex(b12print))
except:
 _st_.goboom(_sage_const_10 )
try:
 _st_.current_tex_line = _sage_const_10 
 _st_.inline(_sage_const_6 , latex(u12))
except:
 _st_.goboom(_sage_const_10 )
try:
 _st_.current_tex_line = _sage_const_10 
 _st_.inline(_sage_const_7 , latex(v12))
except:
 _st_.goboom(_sage_const_10 )
try:
 _st_.current_tex_line = _sage_const_17 
 _st_.inline(_sage_const_8 , latex(a13print))
except:
 _st_.goboom(_sage_const_17 )
try:
 _st_.current_tex_line = _sage_const_17 
 _st_.inline(_sage_const_9 , latex(b13print))
except:
 _st_.goboom(_sage_const_17 )
try:
 _st_.current_tex_line = _sage_const_17 
 _st_.inline(_sage_const_10 , latex(normm13))
except:
 _st_.goboom(_sage_const_17 )
try:
 _st_.current_tex_line = _sage_const_17 
 _st_.inline(_sage_const_11 , latex(normn13))
except:
 _st_.goboom(_sage_const_17 )
try:
 _st_.current_tex_line = _sage_const_17 
 _st_.inline(_sage_const_12 , latex(ang13))
except:
 _st_.goboom(_sage_const_17 )
try:
 _st_.current_tex_line = _sage_const_23 
 _st_.inline(_sage_const_13 , latex(A14))
except:
 _st_.goboom(_sage_const_23 )
try:
 _st_.current_tex_line = _sage_const_23 
 _st_.inline(_sage_const_14 , latex(B14))
except:
 _st_.goboom(_sage_const_23 )
try:
 _st_.current_tex_line = _sage_const_23 
 _st_.inline(_sage_const_15 , latex(C14))
except:
 _st_.goboom(_sage_const_23 )
try:
 _st_.current_tex_line = _sage_const_23 
 _st_.inline(_sage_const_16 , latex(c14))
except:
 _st_.goboom(_sage_const_23 )
try:
 _st_.current_tex_line = _sage_const_23 
 _st_.inline(_sage_const_17 , vec114)
except:
 _st_.goboom(_sage_const_23 )
try:
 _st_.current_tex_line = _sage_const_23 
 _st_.inline(_sage_const_18 , vec214)
except:
 _st_.goboom(_sage_const_23 )
try:
 _st_.current_tex_line = _sage_const_31 
 _st_.inline(_sage_const_19 , latex(a15))
except:
 _st_.goboom(_sage_const_31 )
try:
 _st_.current_tex_line = _sage_const_31 
 _st_.inline(_sage_const_20 , latex(b15))
except:
 _st_.goboom(_sage_const_31 )
try:
 _st_.current_tex_line = _sage_const_31 
 _st_.inline(_sage_const_21 , latex(c15))
except:
 _st_.goboom(_sage_const_31 )
try:
 _st_.current_tex_line = _sage_const_184 
 _st_.inline(_sage_const_22 , latex(coord11[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_184 )
try:
 _st_.current_tex_line = _sage_const_184 
 _st_.inline(_sage_const_23 , latex(coord11[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_184 )
try:
 _st_.current_tex_line = _sage_const_184 
 _st_.inline(_sage_const_24 , latex(coord11[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_184 )
try:
 _st_.current_tex_line = _sage_const_184 
 _st_.inline(_sage_const_25 , latex(S12))
except:
 _st_.goboom(_sage_const_184 )
try:
 _st_.current_tex_line = _sage_const_184 
 _st_.inline(_sage_const_26 , latex(P12))
except:
 _st_.goboom(_sage_const_184 )
try:
 _st_.current_tex_line = _sage_const_184 
 _st_.inline(_sage_const_27 , latex(d1d2ang13))
except:
 _st_.goboom(_sage_const_184 )
try:
 _st_.current_tex_line = _sage_const_184 
 _st_.inline(_sage_const_28 , latex(p14norm))
except:
 _st_.goboom(_sage_const_184 )
try:
 _st_.current_tex_line = _sage_const_184 
 _st_.inline(_sage_const_29 , latex(p14cos))
except:
 _st_.goboom(_sage_const_184 )
try:
 _st_.current_tex_line = _sage_const_184 
 _st_.inline(_sage_const_30 , compl15)
except:
 _st_.goboom(_sage_const_184 )
try:
 _st_.current_tex_line = _sage_const_184 
 _st_.inline(_sage_const_31 , latex(abc15))
except:
 _st_.goboom(_sage_const_184 )
_st_.endofdoc()

